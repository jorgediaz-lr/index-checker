ignoreClassNames: [com.liferay.portal.repository.liferayrepository.model.LiferayFileEntry, com.liferay.portal.kernel.repository.model.FileEntry, com.liferay.portal.kernel.repository.model.Folder, com.liferay.portal.kernel.model.UserPersonalSite, com.liferay.expando.kernel.model.adapter.StagedExpandoColumn, com.liferay.expando.kernel.model.adapter.StagedExpandoTable]
modelNotIndexed: [com.liferay.asset.kernel.model.AssetEntry, com.liferay.trash.kernel.model.TrashEntry, com.liferay.trash.model.TrashEntry, com.liferay.document.library.kernel.model.DLFileEntryMetadata]
modelInfo: [{
    model: default,
    queryHelperClass: !!jorgediazest.indexchecker.model.IndexCheckerQueryHelper {},
    permissionsHelperClass: !!jorgediazest.indexchecker.model.IndexCheckerPermissionsHelper {},
    indexSearchHelperClass: !!jorgediazest.indexchecker.index.IndexSearchHelper {},
    filter: "",
    attributesToQuery: [pk,companyId,groupId,classPK,classNameId,createDate,modifiedDate,status,resourceBlockId,version,folderId,parentFolderId,treePath],
    exactAttributesToCheck: [createDate,modifiedDate,status,version,folderId,parentFolderId,treePath,permissionsRoleId,permissionsGroupRoleId,AssetEntries_AssetCategories.categoryId,AssetCategory.title,AssetEntries_AssetTags.tagId,AssetTag.name],
    relatedDataToQuery: [
        {model: com.liferay.portal.kernel.model.ResourcePermission, mappingsSource: [permissionsClassPK], mappingsRelated: [primKeyId], attributesToQuery: [roleId,actionIds,scope], raw: true},
        {model: com.liferay.portal.kernel.model.ResourceBlockPermission, mappingsSource: [resourceBlockId], mappingsRelated: [resourceBlockId], attributesToQuery: [roleId,actionIds], raw: true},
        {model: com.liferay.asset.kernel.model.AssetEntry,  mappingsSource: [pk], mappingsRelated: [classPK], attributesToQuery: [AssetEntry.entryId,AssetEntries_AssetCategories.categoryId,AssetEntries_AssetTags.tagId,AssetEntry.priority,AssetEntry.visible]},
        {model: com.liferay.asset.kernel.model.AssetCategory, mappingsSource: [AssetEntries_AssetCategories.categoryId], mappingsRelated: [AssetCategory.categoryId], attributesToQuery: [AssetCategory.title], filter: ""},
        {model: com.liferay.asset.kernel.model.AssetTag, mappingsSource: [AssetEntries_AssetTags.tagId],  mappingsRelated: [AssetTag.tagId], attributesToQuery: [AssetTag.name], filter: ""}
    ],
    indexAttributeNameMapping: {
        pk: entryClassPK,
        groupId: scopeGroupId,
        modifiedDate: modified,
        AssetEntries_AssetCategories.categoryId: assetCategoryIds,
        AssetCategory.title: assetCategoryTitles,
        AssetEntries_AssetTags.tagId: assetTagIds,
        AssetTag.name: assetTagNames,
        RatingsStats.averageScore: ratings,
        organizationId: organizationIds,
        permissionsRoleId: roleId,
        permissionsGroupRoleId: groupRoleId,
        roleId: roleIds,
        teamId: teamIds,
        userGroupId: userGroupIds
    }
},
{
    model: workflowedModel,
    filter: "(status=0 or status=8)",
},
{
    model: resourcedModel,
    attributesToQuery: [pk,companyId,groupId,classPK,classNameId,createDate,modifiedDate,status,resourceBlockId,version,folderId,parentFolderId,treePath,resourcePrimKey],
    relatedDataToQuery: [
        {model: com.liferay.portal.kernel.model.ResourcePermission, mappingsSource: [permissionsClassPK], mappingsRelated: [primKeyId], attributesToQuery: [roleId,actionIds,scope], raw: true},
        {model: com.liferay.asset.kernel.model.AssetEntry,  mappingsSource: [resourcePrimKey], mappingsRelated: [classPK], attributesToQuery: [AssetEntry.entryId,AssetEntries_AssetCategories.categoryId,AssetEntries_AssetTags.tagId,AssetEntry.priority,AssetEntry.visible]},
        {model: com.liferay.asset.kernel.model.AssetCategory, mappingsSource: [AssetEntries_AssetCategories.categoryId], mappingsRelated: [AssetCategory.categoryId], attributesToQuery: [AssetCategory.title], filter: ""},
        {model: com.liferay.asset.kernel.model.AssetTag, mappingsSource: [AssetEntries_AssetTags.tagId],  mappingsRelated: [AssetTag.tagId], attributesToQuery: [AssetTag.name], filter: ""}
    ],
    keyAttributes: [resourcePrimKey],
    indexAttributeNameMapping: {
        resourcePrimKey: entryClassPK,
        groupId: scopeGroupId,
        modifiedDate: modified,
        AssetEntries_AssetCategories.categoryId: assetCategoryIds,
        AssetCategory.title: assetCategoryTitles,
        AssetEntries_AssetTags.tagId: assetTagIds,
        AssetTag.name: assetTagNames,
        RatingsStats.averageScore: ratings,
        organizationId: organizationIds,
        permissionsRoleId: roleId,
        permissionsGroupRoleId: groupRoleId,
        roleId: roleIds,
        teamId: teamIds,
        userGroupId: userGroupIds
    }
},
{
    model: com.liferay.asset.kernel.model.AssetCategory,
    relatedDataToQuery: [{model: com.liferay.portal.kernel.model.ResourcePermission, mappingsSource: [permissionsClassPK], mappingsRelated: [primKeyId], attributesToQuery: [roleId,actionIds,scope], raw: true}]
},
{
    model: com.liferay.asset.kernel.model.AssetTag,
    relatedDataToQuery: [{model: com.liferay.portal.kernel.model.ResourcePermission, mappingsSource: [permissionsClassPK], mappingsRelated: [primKeyId], attributesToQuery: [roleId,actionIds,scope], raw: true}]
},
{
    model: com.liferay.calendar.model.CalendarBooking,
    filter: "status=0 or status=9",
    attributesToQuery: [pk,companyId,groupId,classPK,classNameId,createDate,modifiedDate,status,resourceBlockId,version,calendarId],
    permissionsHelperClass: !!jorgediazest.indexchecker.model.CalendarBookingPermissionsHelper {},
},
{
    model: com.liferay.portal.kernel.model.Contact,
    filter: "classPK in (select userId from User_ where defaultUser=[$FALSE$] and status=0)"
},
{
    model: com.liferay.document.library.kernel.model.DLFileEntry,
    filter: "fileEntryId in (select fileEntryId from DLFileVersion where status=0 or status=8)",
    permissionsHelperClass: !!jorgediazest.indexchecker.model.DLFileEntryPermissionsHelper {},
    attributesToQuery: [pk,companyId,groupId,classPK,classNameId,createDate,modifiedDate,status,version,folderId,parentFolderId,treePath,repositoryId],
    exactAttributesToCheck: [createDate,modifiedDate,status,folderId,parentFolderId,permissionsRoleId,permissionsGroupRoleId,AssetEntries_AssetCategories.categoryId,AssetCategory.title,AssetEntries_AssetTags.tagId,AssetTag.name],
    relatedDataToQuery: [
        {forceAdd: true, model: com.liferay.document.library.kernel.model.DLFileVersion, mappingsSource: [fileEntryId,version], mappingsRelated: [fileEntryId,version], attributesToQuery: [status], filter: "(status=0 or status=8)"},
        {model: com.liferay.portal.kernel.model.ResourcePermission, mappingsSource: [permissionsClassPK], mappingsRelated: [primKeyId], attributesToQuery: [roleId,actionIds,scope], raw: true},
        {model: com.liferay.asset.kernel.model.AssetEntry,  mappingsSource: [pk], mappingsRelated: [classPK], attributesToQuery: [AssetEntry.entryId,AssetEntries_AssetCategories.categoryId,AssetEntries_AssetTags.tagId,AssetEntry.priority,AssetEntry.visible]},
        {model: com.liferay.asset.kernel.model.AssetCategory, mappingsSource: [AssetEntries_AssetCategories.categoryId], mappingsRelated: [AssetCategory.categoryId], attributesToQuery: [AssetCategory.title], filter: ""},
        {model: com.liferay.asset.kernel.model.AssetTag, mappingsSource: [AssetEntries_AssetTags.tagId],  mappingsRelated: [AssetTag.tagId], attributesToQuery: [AssetTag.name], filter: ""}
    ]
},
{
    model: com.liferay.document.library.kernel.model.DLFolder,
    exactAttributesToCheck: [createDate,modifiedDate,status,version,folderId,treePath,permissionsRoleId,permissionsGroupRoleId,AssetEntries_AssetCategories.categoryId,AssetCategory.title,AssetEntries_AssetTags.tagId,AssetTag.name]
},
{
    model: com.liferay.dynamic.data.lists.model.DDLRecord,
    filter: "recordId in (select recordId from DDLRecordVersion where status=0)",
    attributesToQuery: [pk,companyId,groupId,classPK,classNameId,createDate,modifiedDate,status,version,recordSetId],
    permissionsHelperClass: !!jorgediazest.indexchecker.model.DDLRecordPermissionsHelper {},
    relatedDataToQuery: [
        {forceAdd: true, model: com.liferay.dynamic.data.lists.model.DDLRecordVersion, mappingsSource: [recordId,version], mappingsRelated: [recordId,version], attributesToQuery: [status], filter: "status=0"},
        {model: com.liferay.portal.kernel.model.ResourcePermission, mappingsSource: [permissionsClassPK], mappingsRelated: [primKeyId], attributesToQuery: [roleId,actionIds,scope], raw: true},
        {model: com.liferay.asset.kernel.model.AssetEntry,  mappingsSource: [pk], mappingsRelated: [classPK], attributesToQuery: [AssetEntry.entryId,AssetEntries_AssetCategories.categoryId,AssetEntries_AssetTags.tagId,AssetEntry.priority,AssetEntry.visible]},
        {model: com.liferay.asset.kernel.model.AssetCategory, mappingsSource: [AssetEntries_AssetCategories.categoryId], mappingsRelated: [AssetCategory.categoryId], attributesToQuery: [AssetCategory.title], filter: ""},
        {model: com.liferay.asset.kernel.model.AssetTag, mappingsSource: [AssetEntries_AssetTags.tagId],  mappingsRelated: [AssetTag.tagId], attributesToQuery: [AssetTag.name], filter: ""}
    ]
},
{
    model: com.liferay.exportimport.kernel.model.ExportImportConfiguration,
    filter: ""
},
{
    model: com.liferay.journal.model.JournalArticle,
    queryHelperClass: !!jorgediazest.indexchecker.model.JournalArticleQueryHelper {},
    indexSearchHelperClass: !!jorgediazest.indexchecker.index.JournalArticleIndexSearchHelper {},
    filter: "classNameId=0",
    keyAttributes: [$$JOURNAL_ARTICLE_INDEX_PRIMARY_KEY_ATTRIBUTE$$],
},
{
    model: com.liferay.journal.model.JournalFolder,
    exactAttributesToCheck: [createDate,modifiedDate,status,version,folderId,treePath,permissionsRoleId,permissionsGroupRoleId,AssetEntries_AssetCategories.categoryId,AssetCategory.title,AssetEntries_AssetTags.tagId,AssetTag.name]
},
{
    model: com.liferay.message.boards.kernel.model.MBMessage,
    permissionsHelperClass: !!jorgediazest.indexchecker.model.MBMessagePermissionsHelper {},
    filter: "(status=0 or status=8) and (categoryId<>-1 or parentMessageId<>0)",
    attributesToQuery: [pk,companyId,groupId,classPK,classNameId,createDate,modifiedDate,status,version,categoryId],
    exactAttributesToCheck: [createDate,modifiedDate,status,version,permissionsRoleId,permissionsGroupRoleId,AssetEntries_AssetCategories.categoryId,AssetCategory.title,AssetEntries_AssetTags.tagId,AssetTag.name],
},
{
    model: com.liferay.message.boards.model.MBMessage,
    permissionsHelperClass: !!jorgediazest.indexchecker.model.MBMessagePermissionsHelper {},
    filter: "(status=0 or status=8) and (categoryId<>-1 or parentMessageId<>0)",
    attributesToQuery: [pk,companyId,groupId,classPK,classNameId,createDate,modifiedDate,status,version,categoryId],
    exactAttributesToCheck: [createDate,modifiedDate,status,version,permissionsRoleId,permissionsGroupRoleId,AssetEntries_AssetCategories.categoryId,AssetCategory.title,AssetEntries_AssetTags.tagId,AssetTag.name],
},
{
    model: com.liferay.portal.kernel.model.ResourcePermission,
    filter: "viewActionId=[$TRUE$] and primKeyId<>0 and name in (select value from ClassName_)"
},
{
    model: com.liferay.portal.kernel.model.User,
    filter: "defaultUser=[$FALSE$]",
    attributesToQuery: [pk,companyId,groupId,modifiedDate,status,organizationId,roleId,teamId,userGroupId],
    exactAttributesToCheck: [groupId,"<=modifiedDate",status,organizationId,roleId,teamId,userGroupId,permissionsRoleId,permissionsGroupRoleId,AssetEntries_AssetCategories.categoryId,AssetCategory.title,AssetEntries_AssetTags.tagId,AssetTag.name],
    relatedDataToQuery: [
        {model: com.liferay.portal.kernel.model.ResourcePermission, mappingsSource: [permissionsClassPK], mappingsRelated: [primKeyId], attributesToQuery: [roleId,actionIds,scope], raw: true},
        {model: com.liferay.asset.kernel.model.AssetEntry,  mappingsSource: [pk], mappingsRelated: [classPK], attributesToQuery: [AssetEntry.entryId,AssetEntries_AssetCategories.categoryId,AssetEntries_AssetTags.tagId,AssetEntry.priority,AssetEntry.visible]},
        {model: com.liferay.asset.kernel.model.AssetCategory, mappingsSource: [AssetEntries_AssetCategories.categoryId], mappingsRelated: [AssetCategory.categoryId], attributesToQuery: [AssetCategory.title], filter: ""},
        {model: com.liferay.asset.kernel.model.AssetTag, mappingsSource: [AssetEntries_AssetTags.tagId],  mappingsRelated: [AssetTag.tagId], attributesToQuery: [AssetTag.name], filter: ""},
        {forceAdd: true, model: com.liferay.portal.kernel.model.Contact, mappingsSource: [userId], mappingsRelated: [userId], attributesToQuery: [contactId,modifiedDate]},
        {forceAdd: true, model: com.liferay.portal.kernel.model.Group, mappingsSource: [groupId], mappingsRelated: [groupId], attributesToQuery: [parentGroupId], attributesAlias: [groupId], filter: "parentGroupId<>0"},
        {forceAdd: true, model: com.liferay.portal.kernel.model.Group, mappingsSource: [groupId], mappingsRelated: [groupId], attributesToQuery: [parentGroupId], attributesAlias: [groupId], filter: "parentGroupId<>0"},
        {forceAdd: true, model: com.liferay.portal.kernel.model.Group, mappingsSource: [groupId], mappingsRelated: [groupId], attributesToQuery: [parentGroupId], attributesAlias: [groupId], filter: "parentGroupId<>0"},
        {forceAdd: true, model: com.liferay.portal.kernel.model.Group, mappingsSource: [groupId], mappingsRelated: [groupId], attributesToQuery: [parentGroupId], attributesAlias: [groupId], filter: "parentGroupId<>0"}
    ]
},
{
    model: com.liferay.wiki.model.WikiNode,
    filter: "status=8"
},
{
    model: com.liferay.wiki.model.WikiPage,
    filter: "(status=0 or status=8) and head=[$TRUE$] and redirectTitle=''",
    attributesToQuery: [pk,companyId,groupId,classPK,classNameId,createDate,modifiedDate,status,version,title,resourcePrimKey],
    exactAttributesToCheck: [createDate,modifiedDate,status,title,permissionsRoleId,permissionsGroupRoleId,AssetEntries_AssetCategories.categoryId,AssetCategory.title,AssetEntries_AssetTags.tagId,AssetTag.name]
}]

#Configuration to retrieve remote configuration
remoteConfigurationBackup: {62: {}, 70: {}, 71: {}, 72: {}}
remoteConfigurationUrl: "https://gist.githubusercontent.com/jorgediaz-lr/205dc3f71bdcdc92b4f0558f583bf2cc/raw/index-checker_configuration.yml"
remoteConfigurationTimeoutMilis: 86400000

#Configuration to show offline update message
offlineUpdateMessage: 'Your Index Checker version is more than six month old!! Download a new version: <a href="https://web.liferay.com/marketplace/-/mp/application/70121999">https://web.liferay.com/marketplace/-/mp/application/70121999</a>'
offlineUpdateTimeoutMilis: 15552000000

#Configuration to show old Liferay version
oldLiferayUpdateMessage: 'Your Liferay installation is outdated. Install a newer enterprise fixpack or upgrade to last community released GA.'
